name: Comment and Uncomment Lines for example1.txt

on:
  schedule:
    # Schedule for 6:50 PM IST (1:20 PM UTC)
    - cron: "20 13 * * 5"
    # Schedule for 6:55 PM IST (1:25 PM UTC)
    - cron: "25 13 * * 5"
  workflow_dispatch:  # Allow manual trigger for testing

jobs:
  modify-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug:Check file content before modification
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          echo "File content before modification:"
          if [ -f "$FILE" ]; then
            cat "$FILE"
          else
            echo "File not found: $FILE"
            exit 1
          fi

      - name: Modify file based on time
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          CURRENT_HOUR=$(date -u +%H)   # Get current hour in UTC
          CURRENT_MINUTE=$(date -u +%M) # Get current minute in UTC
          TARGET_HOUR=13  # 6:50 PM IST = 1:20 PM UTC
          
          echo "Current time: $CURRENT_HOUR:$CURRENT_MINUTE (UTC)"
          
          if [ "$CURRENT_HOUR" -eq "$TARGET_HOUR" ] && [ "$CURRENT_MINUTE" -eq 20 ]; then
            echo "It's 6:50 PM IST. Commenting lines 2 and 3."
            sed -i '2s/^/# /' "$FILE"
            sed -i '3s/^/# /' "$FILE"
          elif [ "$CURRENT_HOUR" -eq "$TARGET_HOUR" ] && [ "$CURRENT_MINUTE" -eq 25 ]; then
            echo "It's 6:55 PM IST. Uncommenting lines 2 and 3."
            sed -i '3s/^# //' "$FILE"
            sed -i '2s/^# //' "$FILE"
          else
            echo "Current time does not match any scheduled action."
          fi

      - name: Debug:Check file content after modification
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          echo "File content after modification:"
          if [ -f "$FILE" ]; then
            cat "$FILE"
          else
            echo "File not found: $FILE"
            exit 1
          fi

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Commit and push changes
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          git add "$FILE"
          git commit -m "Automated update for example1.txt based on schedule" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git push origin main || echo "No changes to push"
