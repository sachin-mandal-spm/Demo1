name: Comment and Uncomment Lines for example1.txt

on:
  schedule:
    # Schedule for 8:40 PM to 8:45 PM IST (3:10 PM to 3:15 PM UTC)
    - cron: "10 15 * * 5"
    # Schedule for 8:50 PM to 8:55 PM IST (3:20 PM to 3:25 PM UTC)
    - cron: "20 15 * * 5"
  workflow_dispatch:  # Allow manual trigger for testing

jobs:
  modify-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug:Check file content before modification
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          echo "File content before modification:"
          if [ -f "$FILE" ]; then
            cat "$FILE"
          else
            echo "File not found: $FILE"
            exit 1
          fi

      - name: Modify file based on time range
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          CURRENT_HOUR=$(date -u +%H)   # Get current hour in UTC
          CURRENT_MINUTE=$(date -u +%M) # Get current minute in UTC
          TARGET_HOUR=15  # 8:40 PM IST = 3:10 PM UTC
          
          echo "Current time: $CURRENT_HOUR:$CURRENT_MINUTE (UTC)"
          
          if [ "$CURRENT_HOUR" -eq "$TARGET_HOUR" ] && [ "$CURRENT_MINUTE" -ge 10 ] && [ "$CURRENT_MINUTE" -lt 15 ]; then
            echo "Between 8:40 PM and 8:45 PM IST. Commenting line 1."
            sed -i '1s/^/# /' "$FILE"
          elif [ "$CURRENT_HOUR" -eq "$TARGET_HOUR" ] && [ "$CURRENT_MINUTE" -ge 20 ] && [ "$CURRENT_MINUTE" -lt 25 ]; then
            echo "Between 8:50 PM and 8:55 PM IST. Commenting line 2."
            sed -i '2s/^/# /' "$FILE"
          else
            echo "Current time does not fall within any specified range."
          fi

      - name: Debug:Check file content after modification
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          echo "File content after modification:"
          if [ -f "$FILE" ]; then
            cat "$FILE"
          else
            echo "File not found: $FILE"
            exit 1
          fi

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Commit and push changes
        run: |
          FILE="$GITHUB_WORKSPACE/example1.txt"
          git add "$FILE"
          git commit -m "Automated update for example1.txt based on schedule" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git push origin main || echo "No changes to push"
