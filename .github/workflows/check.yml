name: Scheduled Comments on File

on:
  schedule:
    - cron: "0 10 * * 0" # First schedule for 'hello3' at 10:00 AM on Sunday
    - cron: "30 10 * * 0" # Second schedule for 'hello4' at 10:30 AM on Sunday
  workflow_dispatch: # Allows manual trigger

jobs:
  comment-hello3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug:Show file content before commenting 'hello3'
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          echo "File content before commenting 'hello3':"
          cat "$FILE"

      - name: Comment 'hello3'
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          if grep -q '^# *hello3' "$FILE"; then
            echo "'hello3' is already commented. Skipping..."
          else
            echo "Commenting 'hello3'."
            sed -i '/hello3/s/^/# /' "$FILE"
          fi

      - name: Debug:Show file content after commenting 'hello3'
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          echo "File content after commenting 'hello3':"
          cat "$FILE"

      - name: Commit and push changes for 'hello3'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add example.txt
          git commit -m "Commented 'hello3'" || echo "No changes to commit"
          git push origin main

  comment-hello4:
    needs: comment-hello3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Wait for sync
        run: sleep 10

      - name: Fetch latest changes
        run: |
          git fetch --all
          git reset --hard origin/main

      - name: Debug:Show file content before commenting 'hello4'
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          echo "File content before commenting 'hello4':"
          cat "$FILE"

      - name: Comment 'hello4' if 'hello3' is commented
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          if grep -q '^# *hello3' "$FILE"; then
            echo "'hello3' is commented. Proceeding to comment 'hello4'."
            sed -i '/hello4/s/^/# /' "$FILE"
          else
            echo "'hello3' is not commented. Skipping 'hello4'."
          fi

      - name: Debug:Show file content after commenting 'hello4'
        run: |
          FILE="$GITHUB_WORKSPACE/example.txt"
          echo "File content after commenting 'hello4':"
          cat "$FILE"

      - name: Commit and push changes for 'hello4'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add example.txt
          git commit -m "Commented 'hello4'" || echo "No changes to commit"
          git push origin main
